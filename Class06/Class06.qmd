---
title: "Class 6: R Functions"
author: "Arshiya Zarmahd (PID: A16247996)"
format: pdf
---

Functions are how we get work done in R. We call functions to do everything from reading data to doing analysis and outputing plots and results. 

All functions in R have at least 3 things:

- A **name** (you pick this)
- Input **arguments** (only one or many, between parenthesis)
- A **body** (where work gets done, the code between curly brackets)

## First, A Silly Function

Lets write a function to add some numbers. We can call it `add()`.

```{r}
x <- 10
y <- 10
x + y
```

```{r}
add <- function(x) {
    y <- 10
    x + y
}
```

Can I now use my new function?

```{r}
add(1)
```

Lets make it a bit more flexible.

```{r}
add <- function(x,y=1) {
    x + y
}

add(x=10,y=10)
```

```{r}
add(10)
```

```{r}
add(10, 100)
```


## My Turn: Example Student Grades

Write a function to grade student work.

We will start with a simple version of the problem and the following example student vectors.

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

```{r}
mean(student1)
```

```{r}
mean(student2)
```

```{r}
mean(student3)
```

```{r}
mean(student2, na.rm=TRUE)
```

What is student 1's lowest score?

Google told me about `min()` and `max()`

```{r}
min(student1)
```

When did student 1 score their lowest?

```{r}
which.min(student1)
```

How do I remove student 1's lowest score from their dataset?

```{r}
student1 [ which.min(student1)]
```

```{r}
student1[-8]
```

```{r}
mean(student1, trim=90)
```

```{r}
mean(student1, trim=(student1 [which.min(student1)]))
```

```{r}
mean(student1 [-which.min(student1)] )
```

Our first working snippet that drops the lowest score and calculates the mean.

```{r}
x <- student3
mean(x[ -which.min(x) ], na.rm=T)
```

Our approach to the NA problem (missing homework). We can replace all NA values with 0.

1st task is finding the NA values (ie. where they are in the vector).

```{r}
x <- student2
x
is.na(x)
```

I have found the NA value (TRUE) from `is.na()`

Now I want to make the NA value equal to 0 (overwrite/mask them).

```{r}
y <- 1:5
y
y[y > 3] <- 0
y
```

```{r}
x[is.na(x)] <- 0
x
```

I want to combine the `is.na(x)` with making these elements equal to 0.

And then take this "masked" (vector of student scores with NA values as 0) and drop the lowest and get the mean.

```{r}
mean(x [-which.min(x)] )
```

```{r}
x <- student3
x[is.na(x)] <- 0
mean(x [-which.min(x)] )
```

## Gradebook Dataset

Now I can turn this snipet into my first function.

```{r}
grade <- function(x) {
  # Make NA (missing work) equal to 0
    x[is.na(x)] <- 0
  # Drop lowest score and get mean
    mean(x [-which.min(x)] )
}
```

```{r}
grade(student1)
grade(student2)
grade(student3)
```

> Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts].

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
head(gradebook)
```

The `apply` function in R is super useful but can be a little confusing to begin with. Lets have a look at how it works.

```{r}
ans <- apply(gradebook, 1, grade)
ans
```

> Q2. Using your grade() function and the supplied gradebook, who is the top scoring student overall in the gradebook? [3pts].

```{r}
which.max(ans)
max(ans)
```

> Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? [2pts].

```{r}
which.min( apply(gradebook, 2, mean, na.rm=TRUE) )
```

> Q4. Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)? [1pt].

```{r}
#ans
cor(gradebook$hw1, ans)
```

```{r}
cor(gradebook$hw2, ans)
```

```{r}
cor(gradebook$hw3, ans)
```

```{r}
cor(gradebook$hw4, ans)
```

```{r}
cor(gradebook$hw5, ans)
```

```{r}
cor(gradebook$hw5, ans)
gradebook$hw5
```

Make all NA values into 0.

```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
mask
```

```{r}
cor(mask$hw5, ans)
```

```{r}
apply(mask, 2, cor, y=ans)
```

Homework 5 had the highest correlation with average grade score. 





















